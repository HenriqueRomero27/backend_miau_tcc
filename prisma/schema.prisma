// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  cpf      String
  name     String
  birthday String
  email    String
  phone    String
  password String
  street       String
  cep          String
  complement   String
  neighborhood String
  city         String
  state        String
  numberHouse       String
  adoptionApplication AdoptionApplication[]

  //address    Address?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}

model Animal {
  id          String   @id @default(uuid())
  ra          String
  name        String
  age         Int
  gender      String
  breed       String //Raça
  fur         String //Pelagem
  furColor    String //Cor da Pelagem
  temperament String
  neutred     String //Castrado
  notes       String //Observação
  photos      String[]

  // adoptionShelter   AdoptionShelter @relation(fields: [adoptionShelterId], references: [id])
  // adoptionShelterId String

  adoptionApplication AdoptionApplication[]
  created_at          DateTime              @default(now())
  updated_at          DateTime              @default(now())
}

model AdoptionShelter {
  id         String   @id @default(uuid())
  cnpj       String   @unique
  name       String
  photos     String[]
  logo       String
  phone      String
  email      String   @unique
  password   String
  animals    Json[]
  address    Json // Usa o tipo JSON para armazenar um objeto complexo
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  // Address    Address?
}

model AdoptionApplication {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  animal     Animal   @relation(fields: [animalId], references: [id])
  animalId   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
